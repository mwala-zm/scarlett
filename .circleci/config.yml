# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  ruby: circleci/ruby@2.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    parallelism: 1 # run three instances of this job in parallel
    docker:
      - image: cimg/ruby:3.2.1
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:13 # database image
        environment: # environment variables for database, it is kind of obvious but it is important that they match with your test config in database.yml
          POSTGRES_USER: postgres
          POSTGRES_DB: prod_scarlet
          POSTGRES_PASSWORD: 123456789
    executor: ruby/default
    steps:
          - checkout
          - restore_cache:  
              keys:
                - v1-bundle-{{ checksum "Gemfile.lock" }}
                - v1-bundle-
          - run:
              name: Install dependencies
              command: bundle install --path vendor/bundle --jobs 3 --retry 3
          - save_cache:  # Save bundle cache
              paths:
                - vendor/bundle
              key: v1-bundle-{{ checksum "Gemfile.lock" }}
  test:
    docker:
      - image: cimg/ruby:3.2.1
    executor: ruby/default
    steps:
      - checkout
      - run:
          name: Running Unit tests
          command: bundle install && rails db:create db:migrate
      - run:
          name: Running Unit tests
          command: bundle exec rspec
          
  deploy:
    docker:
      - image: cimg/ruby:3.2.1
    executor: ruby/default
    steps:
      - checkout
      - run:
          name: Deploy to staging
          command: bundle exec cap staging deploy

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  scarlett_build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
